
<!-- app/views/bugs/edit.html.erb -->
<%= form_with(model: @bug, url: bug_path(@bug, project_id: @project.id), method: :patch) do |form| %>

  <% if @bug.errors.any? %>
    <div>
      <h2><%= pluralize(@bug.errors.count, "error") %> prohibited this bug from being saved: try another</h2>
      <ul>
        <% @bug.errors.full_messages.each do |msg| %>
          <li><%= msg %></li>
        <% end %>
      </ul>
    </div>
  <% end %>

  <%= form.label :b_Title %>
  <%= form.text_field :b_Title %>

<div>
  <%= label :b_type , 'Bug:' %>
  <%= form.radio_button :b_type, 'bug', id: 'type_bug' %>
  <br>
  <%= label :b_type , 'Feature:' %>
  <%= form.radio_button :b_type, 'feature', id: 'type_feature' %>
  <br>
</div>
<div>
  <% bug_status=['newly' ,'started' , 'completed', 'resolved' ]%>
  <%= form.label :status %>
  <%= form.select(:status, bug_status,{}, :required=>true, id: 'Bugz_status') %>
 </div>
  <%= form.label :b_deadline %>
  <%= form.date_field :b_deadline %>

  <%= form.hidden_field :project_id, value: @project.id %>

   
<% if current_user.manager? %>

    <%= form.label :user_id %>
    <%=  form.select :user_id, User.where(role: ['developer', 'QA']).pluck(:name, :id), {prompt:'Assign To User'} %>
<% else %> 
    <%= form.label :user_id %>
    <%=  form.select :user_id, User.where(name: current_user.name).pluck(:name, :id), {prompt:'Assign TO You'} %>
<% end %>




  <%= form.submit %>

<% end %>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const typeBug = document.querySelector('#type_bug');
    const typeFeature = document.querySelector('#type_feature');
    const statusSelect = document.querySelector('#Bugz_status');

    const bugStatus = ['newly', 'started', 'resolved'];
    const featureStatus = ['newly', 'started', 'completed'];

    typeBug.addEventListener('change', function() {
      if (typeBug.checked) {
        updateStatusOptions(bugStatus);
      }
    });

    typeFeature.addEventListener('change', function() {
      if (typeFeature.checked) {
        updateStatusOptions(featureStatus);
      }
    });

    function updateStatusOptions(statusOptions) {
      statusSelect.innerHTML = ''; 

      statusOptions.forEach(function(option) {
        const optionElement = document.createElement('option');
        optionElement.value = option;
        optionElement.textContent = option.charAt(0).toUpperCase() + option.slice(1); 
        statusSelect.appendChild(optionElement);
      });
    }
  });
</script>

<%= link_to 'back' , projects_path,class: 'btn btn-warning' %>
